<!DOCTYPE html>
<html>
  <head>
  
    <meta charset="utf-8">
  <meta http-equiv="Content-Type" content="text/html">
  <link href="/stylesheets/style.css" rel="stylesheet">
  <!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
<!-- jQuery library -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src=https://ajax.googleapis.com/ajax/libs/angularjs/1.4.6/angular.min.js></script>
<!-- Latest compiled JavaScript -->
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>

<script type="text/javascript">

$(document).ready(function() {
  $(".profile").hide();
  
  $('[data-toggle=offcanvas]').click(function() {
    $('.row-offcanvas').toggleClass('active');
  });
 $(".sel1").click(function(){
     $(".trips").hide();
     $(".payment").hide();
     $(".profile").show();
  });
 $(".sel").click(function(){
     $(".profile").hide();
     $(".payment").hide();
     $(".trips").show();
  });
 $(".sel2").click(function(){
     $(".trips").hide();
     $(".profile").hide();
     $(".payment").show();
  });
});


</script>
    
  <style>
  #init_map {
        height: 700px;
        width:500px;
        
        margin: 0;
        padding: 0;
      }
      #map {
        height:50%;
      }
.controls {
  margin-top: 10px;
  border: 1px solid transparent;
  border-radius: 2px 0 0 2px;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  height: 32px;
  outline: none;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}

#origin-input,
#destination-input {
  background-color: #fff;
  font-family: Roboto;
  font-size: 15px;
  font-weight: 300;
  margin-left: 12px;
  padding: 0 11px 0 13px;
  text-overflow: ellipsis;
  width: 200px;
}

#origin-input:focus,
#destination-input:focus {
  border-color: #4d90fe;
}
  </style>
  </head>

<body ng-app="info" ng-controller="info">
 
    <!-- top navbar -->
   
   
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
    
        <div class="navbar-header" style="color:black">
          <button type="button" class="navbar-toggle" data-toggle="offcanvas"
          data-target=".sidebar-nav"></button> <a class="navbar-brand" href="#" style=
          "padding-left:600px">UBER</a>
          <div style="padding-left:1000px">
            <div class="dropdown">
             
             <span class="glyphicon glyphicon-user" style="color:white;padding-top:20px"></span> <span class="dropdown-toggle" data-toggle="dropdown" role="button" style="color:white">username <span class="caret"></span></span>

              <ul class="dropdown-menu">
               <li class="sel"><a ng-click="trips()">My Trips</a></li>

               <li class="sel1"><a href="#profile">Profile</a></li>

               <li class="sel2"><a href="#">Payment</a></li>

                <li class="sel3"><a href="/logout">Log out</a></li>
                
                <li class="sel4"><a href="/Request_Ride">Request Ride</a></li>
                
              </ul>
            </div>
          </div>
        </div>
      </div>
   

  <div class="container">
      <!-- sidebar -->
      <div class="row row-offcanvas row-offcanvas-left">
      
        
        <!-- sidebar -->
        <div class="col-xs-6 col-sm-3 sidebar-offcanvas" id="sidebar" role="navigation">
            <div class="avatarHolder">
          <span class="helper"></span>
           <a href="members/older-chauffeur.3436/" class="avatar Av3436m" data-avatarhtml="true"><img src="/data/img.png" width="96" height="96" alt="Older Chauffeur"></a>
           </div>
            <ul class="nav">
          <li class="sel"><a ng-click="trips()">My Trips</a></li>

          <li class="sel1"><a href="#profile">Profile</a></li>

          <li class="sel2"><a href="#">Payment</a></li>

          <li class="sel3"><a href="/logout">Log out</a></li>  
          
          <li class="sel4"><button type="button" ng-click="rideHome()">Request Ride</button></li>          
            </ul>
        </div>
       
      <section class="trips" id="trips">
      
      <div class="col-xs-12 col-sm-9" id="trips" >
        
           <div id="init_map" ng-hide="hide_map">
                
                <input id="origin-input" class="controls" ng-model="source" type="text"
                placeholder="Enter an origin location">
                <input id="destination-input" class="controls" ng-model="destination" type="text"
                placeholder="Enter a destination location">
                       
                
                <div id="map" ></div>
                </br>
                <button type="button" ng-click="updateRide()" class="btn btn-primary">Update Ride</button>
                <button onclick="getLocation() " >Try It</button>
            </div>

            <div ng-hide="hide_trips">      
        <table  class="table table--bordered table--highlighted flush--bottom">
                  <thead>
                    
                    <tr>
                      <th>Updated Source</th>
                      <th>Updated Destination</th>
                      <th>Travel Distance</th>
                      <th>Expected Travel Time</th>
                    </tr>
                  </thead>
                  <tbody id="items">
                      <tr>   
                      <td>{{ results1.results.source}}</td>
                      <td>{{ results1.results.destination}}</td>
                       <td>{{ results1.results.userDistance}}</td>
                       <td>{{ results1.results.duration}}</td>
                      </tr>
                      
                     </tbody>
        </table>  
        
          </div>
            </div>

        </section>
        </div>
        </div>
                   
     <!-- /.col-xs-12 main -->
      
      <div class="profile" id="profile">
      <div class="col-xs-12 col-sm-9" >
        <table class="table table--bordered table--highlighted flush--bottom">
          <thead>
            <tr>
             Email :
            </tr>
            <tr>
             First Name:
            </tr>
            <tr>
             Last Name :
            </tr>
          </thead>
        </table>
      </div><!-- /.col-xs-12 main -->
      </div>
      <div class="payment">
      <div class="col-xs-12 col-sm-9">
        
       </div><!-- /.col-xs-12 main -->
      </div>
    
  </div><!--/.container-->
  <!--/.page-container-->
  <script>

        var source_place;
        var destination_place;
        function initMap() {
          var origin_place_id = null;
          var destination_place_id = null;
          var travel_mode = google.maps.TravelMode.DRIVING;
          var map = new google.maps.Map(document.getElementById('map'), {
            mapTypeControl: false,
            center: {lat: 37.3229926, lng: -121.88319999999999},
            zoom: 12
          });

      var directionsService = new google.maps.DirectionsService;
      var directionsDisplay = new google.maps.DirectionsRenderer;
      directionsDisplay.setMap(map);

      var origin_input = document.getElementById('origin-input');
      var options = {
      componentRestrictions: {country: 'US'}
    };
      
      var destination_input = document.getElementById('destination-input');
      
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(origin_input);
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(destination_input);
      

      var origin_autocomplete = new google.maps.places.Autocomplete(origin_input, options);
      origin_autocomplete.bindTo('bounds', map);
      var destination_autocomplete =
          new google.maps.places.Autocomplete(destination_input, options);
      destination_autocomplete.bindTo('bounds', map);


      function expandViewportToFitPlace(map, place) {
        if (place.geometry.viewport) {
          map.fitBounds(place.geometry.viewport);
        } else {
          map.setCenter(place.geometry.location);
          map.setZoom(17);
        }
      }

      origin_autocomplete.addListener('place_changed', function() {
        var place = origin_autocomplete.getPlace();
        
        source_place = place.name;
        
        
        alert("Place of origin is " + source_place
        );
        if (!place.geometry) {
          window.alert("Autocomplete's returned place contains no geometry");
          return;
        }
        expandViewportToFitPlace(map, place);

        // If the place has a geometry, store its place ID and route if we have
        // the other place ID
        origin_place_id = place.place_id;
        route(origin_place_id, destination_place_id, travel_mode,
              directionsService, directionsDisplay);
      });

      destination_autocomplete.addListener('place_changed', function() {
        var place = destination_autocomplete.getPlace();
        alert("Place of destination is " + place.name);
        destination_place = place.name;
        if (!place.geometry) {
          window.alert("Autocomplete's returned place contains no geometry");
          return;
        }
        expandViewportToFitPlace(map, place);
        
        // If the place has a geometry, store its place ID and route if we have
        // the other place ID
        destination_place_id = place.place_id;
        route(origin_place_id, destination_place_id, travel_mode,
              directionsService, directionsDisplay);
              
      });

      function route(origin_place_id, destination_place_id, travel_mode,
                     directionsService, directionsDisplay) {
        if (!origin_place_id || !destination_place_id) {
          return;
        }
        directionsService.route({
          origin: {'placeId': origin_place_id},
          destination: {'placeId': destination_place_id},
          travelMode: travel_mode
        }, function(response, status) {
          if (status === google.maps.DirectionsStatus.OK) {
            directionsDisplay.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }
    }
    var info = angular.module('info', []);


    info.controller('info', function($scope, $http) {
      //window.alert("hi there inside");
      $scope.hide_trips = false;
      $scope.hide_map = false;
      
      $scope.rideHome = function(req, res) {
      
      
      }
      
      $scope.trips = function(req, res) {
        
      }

      
      
      $scope.updateRide = function() {
        alert("in controller");
        $scope.source = source_place;
        $scope.destination = destination_place;
        
        // alert("source is okok "+ $scope.source);
        // alert("destination is okok "+ $scope.destination);
        $http({
          method : "POST",
          url : '/updateRideCall',
          data : {
            "source" : $scope.source,
            "destination" : $scope.destination      
          }   
        }).success(function(response) {
          alert("back to update ride");
          $scope.results1 = response;
          //alert(response[0].userDistance);
          //window.location.assign('/afterRideRequestPage');
          console.log(response);
          
      }).error(function(error) {
      /*
      $scope.unexpected_error = false;
      $scope.invalid_login = true;*/
      window.alert("errororroror in distance_cal");

      });
        
        };
      
    });



    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition, showError);
            var pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };

          infoWindow.setPosition(pos);
          infoWindow.setContent('Location found.');

        } else {
            x.innerHTML = "Geolocation is not supported by this browser.";
        }
    }

    function showPosition(position) {
        var latlon = position.coords.latitude + "," + position.coords.longitude;
        var img_url = "http://maps.googleapis.com/maps/api/staticmap?center="
        +latlon+"&zoom=14&size=500x500&sensor=true";
        document.getElementById("map").innerHTML = "<img src='"+img_url+"'>";
    }

    function showError(error) {
        switch(error.code) {
            case error.PERMISSION_DENIED:
                x.innerHTML = "User denied the request for Geolocation."
                break;
            case error.POSITION_UNAVAILABLE:
                x.innerHTML = "Location information is unavailable."
                break;
            case error.TIMEOUT:
                x.innerHTML = "The request to get user location timed out."
                break;
            case error.UNKNOWN_ERROR:
                x.innerHTML = "An unknown error occurred."
                break;
        }
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
      infoWindow.setPosition(pos);
      infoWindow.setContent(browserHasGeolocation ?
                            'Error: The Geolocation service failed.' :
                            'Error: Your browser doesn\'t support geolocation.');
    }
  </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDqJyxzp23GBp2EKWx1OIMGrjCHZOCF-dU&signed_in=true&libraries=places&callback=initMap"
        async defer></script>
</body>
</html>